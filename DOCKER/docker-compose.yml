version: "3.9"

services:
  
  web: 
    image: webapp
    build:
      
      context: ../APP
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    working_dir: /app
    ports: 
      - '8000:8000'
    depends_on:
      - mysql
      - web-migrate
    restart: "unless-stopped"
    environment:
      - WAIT_HOSTS=mysql:3306
      - MYSQL_HOST=mysql
      - ENVIRONMENT=docker
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_DB=${MYSQL_DB}
      - MYSQL_PORT=${MYSQL_PORT}
  
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}

      # FOR S3 BUCKET
      - ACCESS_KEY=${ACCESS_KEY}
      - ACCESS_SECRET=${ACCESS_SECRET}
      - BUCKET_NAME=${BUCKET_NAME}

    volumes: 
      - type: bind
        source: ../APP
        target: /app

  web-migrate: 
    image: webapp
    
    command: python manage.py migrate --noinput
    working_dir: /app
    depends_on:
      - mysql
    restart: "no"
    environment:
      - WAIT_HOSTS=mysql:3306
      - MYSQL_HOST=mysql
      - ENVIRONMENT=docker
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_DB=${MYSQL_DB}
      - MYSQL_PORT=${MYSQL_PORT}
  
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}

      # FOR S3 BUCKET
      - ACCESS_KEY=${ACCESS_KEY}
      - ACCESS_SECRET=${ACCESS_SECRET}
      - BUCKET_NAME=${BUCKET_NAME}
  
    volumes: 
      - type: bind
        source: ../APP
        target: /app
    
  mysql:
    image: mysql
    volumes:
      - mysql-data:/var/lib/mysql
    environment:
      # Database name
      MYSQL_DATABASE: ${MYSQL_DB}
      # So you don't have to use root, but you can if you like
      MYSQL_USER: ${MYSQL_USER}
      # You can use whatever password you like
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      # Password for root access
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_ADMIN_USER: ${MYSQL_ADMIN_USER}
      CHARSET: utf8
    restart: "unless-stopped"
    ports:
      - '3306:3306'
  
  myphpadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - 5050:80
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    restart: "unless-stopped"
  cache:
    image: redis:6.2-alpine
    restart: "unless-stopped"
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning 
    volumes: 
      - cache:/data
  cachingapi:
    build:
      context: ../WAREHOUSE/
      dockerfile: Dockerfile
    restart: "unless-stopped"
    ports:
      - '8080:8000'
    depends_on:
      - cache
    environment:
      - REDIS_HOST=cache
      - REDIS_PORT=6379
    volumes:
      - ../tmp_data/DATA:/code/DATA
      - ../tmp_data/geojson:/code/geojson
volumes:
  mysql-data:
  cache:
    driver: local
